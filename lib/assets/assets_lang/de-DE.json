{
  "app_title": "Multifunktions-Rechner",
  "welcome": "Willkommen beim Multifunktions-Rechner",
  "instruction": "Bitte wählen Sie den benötigten Rechnertyp",
  "fraction_calculator": "Bruchrechner",

  "fraction_title": "Bruchrechner",
  "fraction_simplify": "Vereinfachen",
  "fraction_convert": "Umwandeln",
  "fraction_common": "Gemeinsam",
  "fraction_reciprocal": "Kehrwert",
  "fraction_square": "Quadrat",
  "fraction_cube": "Kubus",
  "fraction_sqrt": "Quadratwurzel",
  "fraction_cbrt": "Kubikwurzel",
  "fraction_power": "Potenz",
  "fraction_root": "Wurzel",
  "fraction_log": "Logarithmus",
  "fraction_ln": "Natürlicher Logarithmus",
  "fraction_add": "Addition",
  "fraction_subtract": "Subtraktion",
  "fraction_multiply": "Multiplikation",
  "fraction_divide": "Division",
  "fraction_clear_all": "Alles Löschen",
  "fraction_calculate": "Berechnen",
  "calculation_history": "Berechnungshistorie",
  "no_calculation_records": "Keine Berechnungsaufzeichnungen",
  "original_expression": "Ursprünglicher Ausdruck",
  "detailed_calculation_steps": "Detaillierte Berechnungsschritte",
  "final_result": "Endergebnis",

  "error": "Fehler",
  "ok": "OK",

  "error_input_first": "Bitte geben Sie die erste Zahl ein",
  "error_denominator_zero": "Der Nenner kann nicht null sein",
  "error_divider_zero": "Der Divisor kann nicht null sein",
  "error_no_reciprocal": "Null hat keinen Kehrwert",
  "error_negative_sqrt": "Negative Zahlen haben keine reelle Quadratwurzel",
  "error_input_second": "Bitte geben Sie den zweiten Parameter ein",
  "error_log_base": "Die Logarithmusbasis muss größer als 0 und ungleich 1 sein",
  "error_log_argument": "Das Logarithmusargument muss größer als 0 sein",
  "error_zero_power": "Null hoch eine nicht-positive Potenz ist bedeutungslos",
  "error_root_zero": "Der Wurzelindex kann nicht null sein",
  "error_even_root_negative": "Negative Zahlen können keine geraden Wurzeln haben",
  "error_invalid_result": "Ungültiges Berechnungsergebnis",

  "step_find_gcd": "Schritt 1: GgT finden",
  "step_simplify": "Schritt 2: Vereinfachen",
  "step_identify_mixed_improper": "Schritt 1: Gemischten unechten Bruch identifizieren",
  "step_two_conversion_methods": "Schritt 2: Zwei Umwandlungsmethoden",
  "step_mixed_to_improper": "Schritt 1: Gemischten zu unechtem Bruch umwandeln",
  "step_improper_to_mixed": "Schritt 1: Unechten zu gemischtem Bruch umwandeln",
  "step_calculate_reciprocal": "Schritt 1: Kehrwert berechnen",
  "step_find_reciprocal": "Schritt 2: Kehrwert finden",
  "step_simplify_reciprocal": "Schritt 3: Kehrwert vereinfachen",
  "step_identify_mixed": "Schritt 1: Gemischte Zahlen identifizieren",
  "step_identify_fraction_type": "Schritt 1: Bruchtyp identifizieren",
  "step_find_lcm": "Schritt 2: kgV finden",
  "step_calculate_multipliers": "Schritt 3: Multiplikatoren berechnen",
  "step_common_denominator": "Schritt 4: Gemeinsamer Nenner",
  "step_convert_to_improper": "Schritt 1: In unechten Bruch umwandeln",
  "step_addition": "Schritt 2: Addition durchführen",
  "step_subtraction": "Schritt 2: Subtraktion durchführen",
  "step_multiplication": "Schritt 2: Multiplikation durchführen",
  "step_division": "Schritt 2: Division durchführen",
  "step_final_simplify": "Schritt N: Endgültige Vereinfachung",
  "step_convert_to_mixed": "Schritt N: In gemischte Zahl umwandeln",
  "step_use_change_base_formula": "Schritt 1: Basiswechselformel verwenden",
  "step_calculate_natural_log": "Schritt 2: Natürliche Logarithmuswerte berechnen",
  "step_calculate_final_result": "Schritt 3: Endergebnis berechnen",
  "log_change_base_formula": "log₍{base}₎({arg}) = ln({arg})/ln({base})",
  "natural_log_calculation": "ln({arg}) = {result}",
  "division_result": "{dividend}/{divisor} = {result}",

  "fraction_numerator_zero_no_simplify": "Der Zähler ist 0, keine Vereinfachung erforderlich",
  "fraction_step_find_gcd": "Schritt 1: Größten gemeinsamen Teiler finden",
  "fraction_gcd_calculation": "ggT({num}, {den}) = {gcd}",
  "fraction_gcd_one_already_simplified": "Der größte gemeinsame Teiler ist 1, der Bruch ist bereits in vereinfachter Form",
  "fraction_result_colon": "Ergebnis: {result}",
  "fraction_step_simplify": "Schritt 2: Vereinfachen",
  "fraction_numerator_divide": "Zähler: {num} ÷ {gcd} = {result}",
  "fraction_denominator_divide": "Nenner: {den} ÷ {gcd} = {result}",
  "fraction_step_identify_mixed_improper": "Schritt 1: Unechten Bruchteil in gemischter Zahl identifizieren",
  "fraction_mixed_improper_description": "In {fraction} ist der Bruchteil {num}/{den} unecht",
  "fraction_step_two_conversion_methods": "Schritt 2: Zwei Umwandlungsergebnisse bereitstellen",
  "fraction_method_normal_mixed": "Methode 1: In echte gemischte Zahl umwandeln",
  "fraction_division_remainder": "{num} ÷ {den} = {quotient} Rest {remainder}",
  "fraction_integer_addition": "{int1} + {int2} = {sum}",
  "fraction_method_improper": "Methode 2: In unechten Bruch umwandeln",
  "fraction_improper_calculation": "[BRUCH:{int} × {den} + {num}:{den}] = [BRUCH:{result}:{den}]",
  "fraction_result1_colon": "Ergebnis 1: {result}",
  "fraction_result2_colon": "Ergebnis 2: {result}",
  "fraction_dual_result": "【Doppeltes Ergebnis】: {result1} , {result2}",
  "fraction_step_mixed_to_improper": "Schritt 1: Gemischte Zahl in unechten Bruch umwandeln",
  "fraction_mixed_to_improper_calc": "Berechnung: [BRUCH:{int} × {den} + {num}:{den}]",
  "fraction_mixed_to_improper_result": "= [BRUCH:{product} + {num}:{den}] = [BRUCH:{total}:{den}]",
  "fraction_step_improper_to_mixed": "Schritt 1: Unechten Bruch in gemischte Zahl umwandeln",
  "fraction_division_expression": "{num} ÷ {den}",
  "fraction_division_result": "= {quotient} Rest {remainder}",
  "fraction_already_proper_form": "Der Bruch ist bereits in geeigneter Form, keine Umwandlung erforderlich",
  "fraction_step_calculate_reciprocal": "Schritt 1: Kehrwert berechnen",
  "fraction_first_convert_to_improper": "Zuerst in unechten Bruch umwandeln:",
  "fraction_multiply_add_calculation": "{int} × {den} + {num} = {result}",
  "fraction_get_improper": "Unechten Bruch erhalten: [BRUCH:{num}:{den}]",
  "fraction_step_find_reciprocal": "Schritt 2: Kehrwert finden",
  "fraction_reciprocal_explanation": "Der Kehrwert von [BRUCH:{num}:{den}] ist [BRUCH:{rec_num}:{rec_den}]",
  "fraction_negative_reciprocal": "Da die ursprüngliche Zahl negativ ist, ist auch der Kehrwert negativ",
  "fraction_step_simplify_reciprocal": "Schritt 3: Vereinfachen",
  "fraction_after_simplify": "Nach der Vereinfachung: {result}",
  "fraction_simple_reciprocal": "Der Kehrwert von [BRUCH:{num}:{den}] ist [BRUCH:{rec_num}:{rec_den}]",
  "fraction_step_identify_mixed": "Schritt 1: Gemischte Zahlen identifizieren",
  "fraction_first_is_mixed": "Die erste Zahl ist gemischt: {fraction}",
  "fraction_second_is_mixed": "Die zweite Zahl ist gemischt: {fraction}",
  "fraction_common_keep_integer": "Ganzzahlige Teile bei der gemeinsamen Nennerumwandlung unverändert lassen, nur Bruchteile umwandeln",
  "fraction_step_identify_fraction_type": "Schritt 1: Bruchtypen identifizieren",
  "fraction_both_proper_improper": "Beide Brüche sind echt oder unecht, mit gemeinsamer Nennerumwandlung fortfahren",
  "fraction_step_find_lcm": "Schritt 2: Kleinstes gemeinsames Vielfaches der Nenner finden",
  "fraction_lcm_calculation": "kgV({den1}, {den2}) = {lcm}",
  "fraction_step_calculate_multipliers": "Schritt 3: Multiplikatoren für jeden Nenner berechnen",
  "fraction_multiplier1": "{lcm} ÷ {den} = {mult}",
  "fraction_multiplier2": "{lcm} ÷ {den} = {mult}",
  "fraction_step_common_denominator": "Schritt 4: Auf gemeinsamen Nenner bringen",
  "fraction_mixed_common_part": "Bruchteil in {fraction} umwandeln:",
  "fraction_fraction_part_common": "{num}/{den} = [BRUCH:{num}×{mult}:{den}×{mult}] = {new_num}/{lcm}",
  "fraction_so_mixed_result": "Also {fraction} = {int} {num}/{den}",
  "fraction_simple_common": "{num}/{den} = [BRUCH:{num}×{mult}:{den}×{mult}] = {new_num}/{lcm}",
  "fraction_step_convert_to_improper": "Schritt 1: Gemischte Zahlen in unechte Brüche umwandeln",
  "fraction_mixed_to_improper_show": "{fraction} = [BRUCH:{int} × {den} + {num}:{den}] = [BRUCH:{result}:{den}]",
  "fraction_unimplemented_binary_operation": "Nicht implementierte binäre Operation: {operation}",
  "fraction_step_addition": "Schritt 2: Bruchaddition",
  "fraction_same_denominator_add": "Gleiche Nenner, Zähler direkt addieren:",
  "fraction_add_numerators": "{num1} + {num2} = {sum}",
  "fraction_different_denominators_need_common": "Verschiedene Nenner, gemeinsamer Nenner erforderlich:",
  "fraction_lcm_result": "Kleinstes gemeinsames Vielfaches kgV({den1}, {den2}) = {lcm}",
  "fraction_common_conversion1": "[BRUCH:{num}:{den}] = [BRUCH:{num} × {mult}:{lcm}] = [BRUCH:{result}:{lcm}]",
  "fraction_common_conversion2": "[BRUCH:{num}:{den}] = [BRUCH:{num} × {mult}:{lcm}] = [BRUCH:{result}:{lcm}]",
  "fraction_add_after_common": "Addieren: {num1} + {num2} = {sum}",
  "fraction_step_subtraction": "Schritt 2: Bruchsubtraktion",
  "fraction_same_denominator_subtract": "Gleiche Nenner, Zähler direkt subtrahieren:",
  "fraction_subtract_numerators": "{num1} - {num2} = {diff}",
  "fraction_subtract_after_common": "Subtrahieren: {num1} - {num2} = {diff}",
  "fraction_step_multiplication": "Schritt 2: Bruchmultiplikation",
  "fraction_multiply_rule": "Zähler und Nenner multiplizieren:",
  "fraction_multiply_calculation": "[BRUCH:{num1}×{num2}:{den1}×{den2}] = [BRUCH:{result_num}:{result_den}]",
  "fraction_step_division": "Schritt 2: Bruchdivision",
  "fraction_division_to_multiplication": "Division in Multiplikation umwandeln (mit Kehrwert multiplizieren):",
  "fraction_division_calculation": "[BRUCH:{num1}:{den1}] ÷ [BRUCH:{num2}:{den2}] = [BRUCH:{num1}:{den1}] × [BRUCH:{rec_num}:{rec_den}]",
  "fraction_equals_result": "= [BRUCH:{num}:{den}]",
  "fraction_step_final_simplify": "Schritt 3: Vereinfachen",
  "fraction_gcd_final": "Größter gemeinsamer Teiler ggT({num}, {den}) = {gcd}",
  "fraction_after_final_simplify": "Nach der Vereinfachung: [BRUCH:{num}:{den}]",
  "fraction_step_convert_to_mixed": "Schritt 4: In gemischte Zahl umwandeln",
  "fraction_division_to_mixed": "{num} ÷ {den} = {quotient} Rest {remainder}",
  "fraction_final_result_integer": "Endergebnis: {result}",
  "fraction_final_result_mixed": "Endergebnis: {result}",
  "fraction_cannot_convert_to_fraction": "Kann nicht in Bruch umwandeln",
  "right_triangle_calculator": "Rechtwinkliger Dreiecksrechner",
  "any_angle_triangle_calculator": "Beliebiger Winkel Dreiecksrechner",
  "mortgage_calculator": "Hypothekenrechner",
  "compound_interest_calculator": "Zinseszinsrechner",
  "calculus_calculator": "Analysis-Rechner",
  "equation_calculator": "Gleichungsrechner",
  "coming_soon": "Demnächst Verfügbar",
  "rightTriangleCalculator": "Rechtwinkliger Dreieck Rechner",
  "inputConditions": "Eingabebedingungen",
  "directEdgeA": "Kathete a",
  "directEdgeB": "Kathete b",
  "hypotenuse": "Hypotenuse c",
  "acuteAngleA": "Spitzer Winkel α",
  "acuteAngleB": "Spitzer Winkel β",
  "area": "Fläche",
  "perimeter": "Umfang",
  "minimumConditions": "Minimum: zwei Seiten ODER eine Seite + ein Winkel ODER Fläche + eine Seite",
  "conditionsSufficient": "✅ Bedingungen erfüllt, Dreieck berechnet!",
  "degrees": "°",
  "usageInstructions": "Anleitung",
  "dragToMove": "Ziehen",
  "doubleTapReset": "Doppeltippen Reset",

  "directEdgeAShort": "a",
  "directEdgeBShort": "b",
  "hypotenuseShort": "c",
  "acuteAngleAShort": "A",
  "acuteAngleBShort": "B",
  "areaShort": "Fläche",
  "perimeterShort": "Umf",
  "angleError": "Spitze Winkel müssen kleiner als 90 Grad sein"
}